# jumpvel and gravity
# i think mr czechas made these
--- original/engine/physics.cpp	2020-11-30 03:47:28.000000000 +0200
+++ mod/engine/physics.cpp	2025-02-25 23:33:47.958192310 +0200
@@ -474,8 +474,9 @@
 const float FLOORZ = 0.867f;
 const float SLOPEZ = 0.5f;
 const float WALLZ = 0.2f;
-extern const float JUMPVEL = 125.0f;
-extern const float GRAVITY = 200.0f;
+
+FVARP(jumpvel, 0, 225.0f, 100000.0f);
+FVARP(gravity, 0, 200.0f, 100000.0f);
 
 bool ellipseboxcollide(physent *d, const vec &dir, const vec &o, const vec &center, float yaw, float xr, float yr, float hi, float lo)
 {
@@ -1408,10 +1409,10 @@
     bool water = isliquid(mat);
     if(water)
     {
-        d->vel.z -= grav*GRAVITY/16*secs;
+        d->vel.z -= grav*gravity/16*secs;
         d->vel.mul(max(1.0f - secs/waterfric, 0.0f));
     }
-    else d->vel.z -= grav*GRAVITY*secs;
+    else d->vel.z -= grav*gravity*secs;
     vec old(d->o);
     loopi(2)
     {
@@ -1595,7 +1596,7 @@
         if(pl->jumping && allowmove)
         {
             pl->jumping = false;
-            pl->vel.z = max(pl->vel.z, JUMPVEL);
+            pl->vel.z = max(pl->vel.z, jumpvel);
         }
     }
     else if(pl->physstate >= PHYS_SLOPE || water)
@@ -1605,7 +1606,9 @@
         {
             pl->jumping = false;
 
-            pl->vel.z = max(pl->vel.z, JUMPVEL); // physics impulse upwards
+
+
+            pl->vel.z = max(pl->vel.z, jumpvel); // physics impulse upwards
             if(water) { pl->vel.x /= 8.0f; pl->vel.y /= 8.0f; } // dampen velocity change even harder, gives correct water feel
 
             game::physicstrigger(pl, local, 1, 0);
@@ -1652,13 +1655,13 @@
 {
     float secs = curtime/1000.0f;
     vec g(0, 0, 0);
-    if(pl->physstate == PHYS_FALL) g.z -= GRAVITY*secs;
+    if(pl->physstate == PHYS_FALL) g.z -= gravity*secs;
     else if(pl->floor.z > 0 && pl->floor.z < FLOORZ)
     {
         g.z = -1;
         g.project(pl->floor);
         g.normalize();
-        g.mul(GRAVITY*secs);
+        g.mul(gravity*secs);
     }
     if(!water || !game::allowmove(pl) || (!pl->move && !pl->strafe)) pl->falling.add(g);
 
